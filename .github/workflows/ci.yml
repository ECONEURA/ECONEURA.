name: CI/CD Pipeline (Optimized)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build shared packages
        run: pnpm -w build
        continue-on-error: true

      - name: Lint
        run: pnpm -w lint --max-warnings 0

      - name: TypeCheck
        run: pnpm -w typecheck

      - name: Tests
        run: pnpm -w test --run

      - name: Coverage
        run: pnpm -w test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/coverage-final.json
          fail_ci_if_error: false
        continue-on-error: true

      - name: Build web app
        working-directory: apps/web
        run: pnpm run build

      - name: Verify build artifacts
        working-directory: apps/web
        run: |
          test -d dist || (echo "ERROR: dist folder not created" && exit 1)
          test -f dist/index.html || (echo "ERROR: index.html not found" && exit 1)
          echo "✅ Build artifacts verified"
          ls -lh dist/ | head -20

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-build-${{ github.sha }}
          path: apps/web/dist/
          retention-days: 7

  validate-python:
    name: Validate Python API
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python dependencies
        working-directory: apps/api_py
        run: |
          pip install -r requirements.txt

      - name: Validate Python syntax
        working-directory: apps/api_py
        run: |
          python -m py_compile server.py
          echo "✅ Python API syntax OK"

      - name: Run Python tests (if exist)
        working-directory: apps/api_py
        run: |
          if [ -f tests/test_server.py ]; then
            python -m pytest tests/ -v
          else
            echo "⚠️ No Python tests found, skipping"
          fi
        continue-on-error: true

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Audit dependencies
        run: pnpm audit --prod
        continue-on-error: true

      - name: Check for hardcoded secrets
        run: |
          echo "Scanning for potential secrets..."
          # Basic secret patterns (non-blocking)
          grep -r -i -E "(password|secret|key|token)\s*=\s*['\"][^'\"]{8,}" . --exclude-dir={node_modules,.git,dist,build} || echo "✅ No obvious secrets found"
        continue-on-error: true
