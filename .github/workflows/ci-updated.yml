# ECONEURA CI/CD - Actualizado para 11 Agentes
# Actualizado: 8 de octubre 2025
name: CI Full
on:
  push:
    branches: [main, develop, copilot/**]
  pull_request:
    branches: [main, develop]
jobs:
  lint-and-typecheck:
    name: Lint & TypeCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          
      - name: Install pnpm globally
        run: npm install -g pnpm
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Instalar pnpm
        run: npm install -g pnpm
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Lint
        run: pnpm -w lint
        
      - name: TypeCheck
        run: pnpm -w typecheck
  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          
      - name: Install pnpm globally
        run: npm install -g pnpm
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Instalar pnpm
        run: npm install -g pnpm
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run tests with coverage
        run: pnpm -w test:coverage
  test-backend-services:
    name: Test Backend Services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - analytics
          - cdo

          - financial-nexus
          - market-hub
          - notification-engine
          - operations-ops
          - portfolio-manager
          - risk-engine
          - social-network
          - user-auth

          - optimization
          - prediction
          - game-theory
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r services/${{ matrix.service }}/requirements.txt
          
      - name: Run tests
        working-directory: services/${{ matrix.service }}
        run: pytest
  test-auth-service:
    name: Test Auth Service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r services/auth/requirements.txt
          
      - name: Run tests
        working-directory: services/auth
        run: pytest
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test-frontend]

    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          

      - name: Install dependencies
        working-directory: ./backend/${{ matrix.service }}
        run: |
          if [ -f package.json ]; then
            npm ci
          fi

      - name: Install pnpm globally
        run: npm install -g pnpm
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build packages
        run: pnpm -w build
  docker-build:
    name: Docker Build Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

        
      - name: Run tests
        working-directory: ./backend/${{ matrix.service }}
        run: |

          if [ -f package.json ]; then
            npm test || echo "No tests configured for ${{ matrix.service }}"
          fi

  build:
    name: Build
    needs: [lint-and-typecheck, test-frontend, test-backend-services]

          docker compose -f docker-compose.dev.enhanced.yml build
  integration-tests:
    name: Integration Tests

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
          
      - name: Install pnpm globally
        run: npm install -g pnpm
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          

      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
